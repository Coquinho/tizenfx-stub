CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(MAJORVER 1)
SET(FULLVER 1)

SET(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS true)
SET(PREFIX ${CMAKE_INSTALL_PREFIX})
SET(EXEC_PREFIX "\${prefix}")
SET(VERSION ${FULLVER})

SET(LIB_INSTALL_DIR ${PREFIX}/lib)

PROJECT(app_common CXX)

AUX_SOURCE_DIRECTORY(src SOURCES)

ADD_DEFINITIONS("-DSHARE_PREFIX=\"${SHARE_INSTALL_PREFIX}/aul\"")

# Set required packages
INCLUDE(FindPkgConfig)
#SET(APPCOMMON_LIB_PKG_CHECK_MODULES )
#pkg_check_modules(libpkgs REQUIRED ${APPCOMMON_LIB_PKG_CHECK_MODULES})

#FOREACH(flag ${libpkgs_CFLAGS})
#	SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag}")
#ENDFOREACH(flag)

#pkg_check_modules(APP_LAUNCHER_DEPS glib-2.0 pkgmgr-info bundle)
#FOREACH(APP_LAUNCHER_FLAGS ${APP_LAUNCHER_DEPS_CFLAGS})
#	SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${APP_LAUNCHER_FLAGS}")
#ENDFOREACH(APP_LAUNCHER_FLAGS)

# Compiler flags
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include)
SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} -Wl,-zdefs" )
SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} -fvisibility=hidden")
SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} -fpic")
SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} -Werror")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS}")
SET(CMAKE_C_FLAGS_DEBUG "-O0 -g")
SET(CMAKE_C_FLAGS_RELEASE "-O2")
SET(CMAKE_SKIP_BUILD_RPATH true)
# Linker flags
SET(CMAKE_EXE_LINKER_FLAGS "-Wl,--as-needed")

# aul
add_library(app_common SHARED ${SOURCES})
TARGET_LINK_LIBRARIES(app_common ${libpkgs_LDFLAGS})
SET_TARGET_PROPERTIES(app_common PROPERTIES SOVERSION ${MAJORVER})
SET_TARGET_PROPERTIES(app_common PROPERTIES VERSION ${FULLVER})
INSTALL(TARGETS app_common DESTINATION ${LIB_INSTALL_DIR} COMPONENT RuntimeLibraries)

# pkgconfig file
#CONFIGURE_FILE(aul.pc.in aul.pc @ONLY)
#CONFIGURE_FILE(feature/preexec_list.txt.in feature/preexec_list.txt @ONLY)

# Install headers, other files
INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/include/app-common.h DESTINATION include/app-common)
#INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/aul.pc DESTINATION ${LIB_INSTALL_DIR}/pkgconfig)
#INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/feature/preexec_list.txt DESTINATION ${SHARE_INSTALL_PREFIX}/aul )
#INSTALL(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/data/miregex DESTINATION ${SHARE_INSTALL_PREFIX}/aul )

# tool
#ADD_SUBDIRECTORY(tool)
#ADD_SUBDIRECTORY(parser)
